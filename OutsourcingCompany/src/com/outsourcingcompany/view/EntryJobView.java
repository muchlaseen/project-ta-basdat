/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.outsourcingcompany.view;

import com.outsourcingcompany.controller.Controller;
import com.outsourcingcompany.model.Client;
import com.outsourcingcompany.model.Job;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Achmad Muchlasin
 */
public class EntryJobView extends javax.swing.JFrame {

    private Controller controller;

    /**
     * Creates new form EntryJobView
     */
    public EntryJobView() throws SQLException {
        initComponents();
        this.controller = new Controller();
        this.showTableJobData();
        this.showCmbBoxClient();
        this.showCmbBoxCategory();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        btnAddJob = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtJobId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtJobName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtJobDesc = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbJobData = new javax.swing.JTable();
        cbJobCat = new javax.swing.JComboBox<>();
        cbClientId = new javax.swing.JComboBox<>();
        btnUpdJob = new javax.swing.JButton();
        btnDelJob = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setText("Job Name");

        btnAddJob.setText("Add");
        btnAddJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddJobActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        jLabel1.setText("OUTSOURCING MANAGEMENT APP");

        jLabel2.setFont(new java.awt.Font("Lato", 1, 16)); // NOI18N
        jLabel2.setText("Job Data Entry");

        jLabel4.setText("Client ID");

        jLabel3.setText("Job ID");

        jLabel6.setText("Category");

        jLabel7.setText("Description");

        tbJobData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbJobData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbJobDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbJobData);

        cbJobCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbClientId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnUpdJob.setText("Update");
        btnUpdJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdJobActionPerformed(evt);
            }
        });

        btnDelJob.setText("Delete");
        btnDelJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelJobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtJobId, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                .addComponent(txtJobName)
                                .addComponent(txtJobDesc)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnAddJob, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnDelJob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(cbJobCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbClientId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnUpdJob, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtJobId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbClientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtJobName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbJobCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtJobDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddJob)
                            .addComponent(btnDelJob))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdJob))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddJobActionPerformed
        // TODO add your handling code here:
        try {
            Job job = new Job();

            job.setJobId(Integer.parseInt(this.txtJobId.getText()));
            job.setClient(this.controller.getClientData().get(this.cbClientId.getSelectedIndex()));
            job.setJobName(this.txtJobName.getText());
            job.setJobCat(this.cbJobCat.getSelectedItem().toString());
            job.setJobDesc(this.txtJobDesc.getText());
            this.controller.insertJob(job);

            JOptionPane.showMessageDialog(null, "Job added!");

            this.showTableJobData();

        } catch (SQLException e) {
            Logger.getLogger(EntryJobView.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btnAddJobActionPerformed

    private void btnUpdJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdJobActionPerformed
        // TODO add your handling code here:

        String selected = this.tbJobData.getValueAt(this.tbJobData.getSelectedRow(), 0).toString();
        Job j = new Job();

        try {
            j.setJobId(Integer.parseInt(selected));
            j.setClient(this.controller.getClientData().get(this.cbClientId.getSelectedIndex()));
            j.setJobName(this.txtJobName.getText());
            j.setJobCat(this.cbJobCat.getSelectedItem().toString());
            j.setJobDesc(this.txtJobDesc.getText());
            this.controller.updateJob(j);

            JOptionPane.showMessageDialog(null, "Job Updated!");
            this.showTableJobData();
        } catch (SQLException ex) {
            Logger.getLogger(EntryJobView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUpdJobActionPerformed

    private void btnDelJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelJobActionPerformed
        // TODO add your handling code here:
        try {
            String selected = this.tbJobData.getValueAt(this.tbJobData.getSelectedRow(), 0).toString();
            this.controller.deleteJob(Integer.parseInt(selected));
            
            JOptionPane.showMessageDialog(null, "Job Deleted!");
            
            this.showTableJobData();
            
        } catch (SQLException ex) {
            Logger.getLogger(EntryJobView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDelJobActionPerformed

    private void tbJobDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbJobDataMouseClicked
        // TODO add your handling code here:
        this.txtJobId.setEditable(false);
        this.txtJobId.setText(this.tbJobData.getValueAt(this.tbJobData.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tbJobDataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntryJobView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntryJobView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntryJobView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntryJobView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EntryJobView().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(EntryJobView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddJob;
    private javax.swing.JButton btnDelJob;
    private javax.swing.JButton btnUpdJob;
    private javax.swing.JComboBox<String> cbClientId;
    private javax.swing.JComboBox<String> cbJobCat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbJobData;
    private javax.swing.JTextField txtJobDesc;
    private javax.swing.JTextField txtJobId;
    private javax.swing.JTextField txtJobName;
    // End of variables declaration//GEN-END:variables

    private void showCmbBoxCategory() throws SQLException {
        DefaultComboBoxModel dcmbCategory = new DefaultComboBoxModel();
        dcmbCategory.addElement("IT");
        dcmbCategory.addElement("Engineering");
        dcmbCategory.addElement("HRD");
        dcmbCategory.addElement("Finance");
        dcmbCategory.addElement("General");
        dcmbCategory.addElement("Accounting");

        this.cbJobCat.setModel(dcmbCategory);
    }

    private void showCmbBoxClient() throws SQLException {
        DefaultComboBoxModel dcmbClientData = new DefaultComboBoxModel();
        for (Client cl : this.controller.getClientData()) {
            dcmbClientData.addElement(cl.getClId());
        }

        this.cbClientId.setModel(dcmbClientData);
    }

    private void showTableJobData() throws SQLException {
        DefaultTableModel dtmJobData = new DefaultTableModel(new String[]{"JOB ID", "CLIENT ID", "JOB NAME", "CATEGORY", "DESCRIPTION"}, 0);
        dtmJobData.setRowCount(0);
        for (Job j : this.controller.getJobData()) {
            dtmJobData.addRow(new String[]{j.getJobId().toString(), j.getClient().getClId().toString(), j.getJobName(), j.getJobCat(), j.getJobDesc()});
        }

        tbJobData.setModel(dtmJobData);
    }
}
